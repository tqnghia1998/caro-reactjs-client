{"ast":null,"code":"import _defineProperty from \"/Users/nghiatq/web-btcn-1612422/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport ActionType from '../constants/actionTypes'; // import Config from '../constants/configs';\n// Initial state of game\n\nconst initialState = {\n  history: [{\n    x: null,\n    y: null,\n    squares: Array(Config.brdSize).fill(null).map(() => {\n      return Array(Config.brdSize).fill(null);\n    })\n  }],\n  nextMove: Config.xPlayer,\n  stepNumber: 0,\n  winCells: null,\n  accendingMode: false\n};\nexport default function handle(state = initialState, action) {\n  switch (action.type) {\n    case ActionType.CLICK:\n      return state;\n\n    case ActionType.CHANG_SORT:\n      return _objectSpread({}, state, {\n        accendingMode: !state.accendingMode\n      });\n\n    case ActionType.JUMP_TO:\n      return state;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/nghiatq/web-btcn-1612422/src/reducers/gameReducers.js"],"names":["ActionType","initialState","history","x","y","squares","Array","Config","brdSize","fill","map","nextMove","xPlayer","stepNumber","winCells","accendingMode","handle","state","action","type","CLICK","CHANG_SORT","JUMP_TO"],"mappings":";;;;;;AAAA,OAAOA,UAAP,MAAuB,0BAAvB,C,CACA;AAEA;;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,CAAC;AACNC,IAAAA,CAAC,EAAE,IADG;AAENC,IAAAA,CAAC,EAAE,IAFG;AAGNC,IAAAA,OAAO,EAAEC,KAAK,CAACC,MAAM,CAACC,OAAR,CAAL,CAAsBC,IAAtB,CAA2B,IAA3B,EAAiCC,GAAjC,CAAqC,MAAM;AAAE,aAAOJ,KAAK,CAACC,MAAM,CAACC,OAAR,CAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAP;AAAwC,KAArF;AAHH,GAAD,CADQ;AAMjBE,EAAAA,QAAQ,EAAEJ,MAAM,CAACK,OANA;AAOjBC,EAAAA,UAAU,EAAE,CAPK;AAQjBC,EAAAA,QAAQ,EAAE,IARO;AASjBC,EAAAA,aAAa,EAAE;AATE,CAArB;AAYA,eAAe,SAASC,MAAT,CAAgBC,KAAK,GAAGhB,YAAxB,EAAsCiB,MAAtC,EAA8C;AACzD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKnB,UAAU,CAACoB,KAAhB;AAEI,aAAOH,KAAP;;AAEJ,SAAKjB,UAAU,CAACqB,UAAhB;AACI,+BACOJ,KADP;AAEIF,QAAAA,aAAa,EAAE,CAACE,KAAK,CAACF;AAF1B;;AAKJ,SAAKf,UAAU,CAACsB,OAAhB;AAEI,aAAOL,KAAP;;AAEJ;AACI,aAAOA,KAAP;AAhBR;AAkBH","sourcesContent":["import ActionType from '../constants/actionTypes';\n// import Config from '../constants/configs';\n\n// Initial state of game\nconst initialState = {\n    history: [{\n        x: null,\n        y: null,\n        squares: Array(Config.brdSize).fill(null).map(() => { return Array(Config.brdSize).fill(null)})\n    }],\n    nextMove: Config.xPlayer,\n    stepNumber: 0,\n    winCells: null,\n    accendingMode: false\n};\n\nexport default function handle(state = initialState, action) {\n    switch (action.type) {\n        case ActionType.CLICK:\n\n            return state;\n        \n        case ActionType.CHANG_SORT:\n            return {\n                ...state,\n                accendingMode: !state.accendingMode\n            };\n        \n        case ActionType.JUMP_TO:\n            \n            return state;\n        \n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}