{"ast":null,"code":"var _jsxFileName = \"/Users/nghiatq/OneDrive - VNG Corporation/Study/Git/WEB/btcn04/Source/src/Square.js\";\nimport React from 'react';\nimport Config from './Config';\n\nfunction Square(props) {\n  const value = props.value;\n  const winCell = props.winCell;\n  const moveColor = value === Config.xPlayer ? Config.plColor.X : Config.plColor.O;\n  const className = winCell === false ? 'square' : 'square-win';\n  return React.createElement(\"button\", {\n    type: \"button\",\n    className: className,\n    onClick: () => props.handleClick(props.row, props.col),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"font\", {\n    color: moveColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, value));\n}\n\nexport default Square;","map":{"version":3,"sources":["/Users/nghiatq/OneDrive - VNG Corporation/Study/Git/WEB/btcn04/Source/src/Square.js"],"names":["React","Config","Square","props","value","winCell","moveColor","xPlayer","plColor","X","O","className","handleClick","row","col"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA,QACXC,KADW,GACDD,KADC,CACXC,KADW;AAAA,QAEXC,OAFW,GAECF,KAFD,CAEXE,OAFW;AAInB,QAAMC,SAAS,GAAGF,KAAK,KAAKH,MAAM,CAACM,OAAjB,GAA2BN,MAAM,CAACO,OAAP,CAAeC,CAA1C,GAA8CR,MAAM,CAACO,OAAP,CAAeE,CAA/E;AACA,QAAMC,SAAS,GAAGN,OAAO,KAAK,KAAZ,GAAoB,QAApB,GAA+B,YAAjD;AACA,SACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAEM,SAAjC;AACQ,IAAA,OAAO,EAAE,MAAMR,KAAK,CAACS,WAAN,CAAkBT,KAAK,CAACU,GAAxB,EAA6BV,KAAK,CAACW,GAAnC,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAM,IAAA,KAAK,EAAER,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBF,KAAzB,CAFJ,CADJ;AAMH;;AAED,eAAeF,MAAf","sourcesContent":["import React from 'react';\nimport Config from './Config';\n\nfunction Square(props) {\n    const { value } = props;\n    const { winCell } = props;\n    \n    const moveColor = value === Config.xPlayer ? Config.plColor.X : Config.plColor.O;\n    const className = winCell === false ? 'square' : 'square-win';\n    return (\n        <button type='button' className={className}\n                onClick={() => props.handleClick(props.row, props.col)}>\n            <font color={moveColor}>{value}</font>\n        </button>\n    );\n}\n\nexport default Square;"]},"metadata":{},"sourceType":"module"}